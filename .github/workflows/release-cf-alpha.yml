name: Release Latest to Curseforge as Alpha

on:
  workflow_dispatch:
    inputs:
      diagnostic_mode:
        description: Diagnostic Mode
        type: boolean
        default: false
        required: true

jobs:
  get-package-info:
    name: Get Latest Package Info
    runs-on: ubuntu-22.04
    outputs:
      version: ${{ steps.download-info.outputs.version }}
    steps:
      - name: Download Package Info
        id: download-info
        uses: compactmods/dl-package-info@1.0.3
        env:
          GQL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          owner: compactmods
          repo: compactmachines
          group: dev.compactmods.compactmachines.compactmachines-forge
          filter: "^compactmachines-forge-(?:[\\d\\.]+).jar$"
          outputFile: compactmachines.json

      - name: Debug output
        run: |
          echo "Version: ${{ steps.download-info.outputs.version }}"
          cat compactmachines.json

      - name: Read info into variable [latest]
        id: info
        run: echo "latestJson=$(cat compactmachines.json)" >> $GITHUB_OUTPUT

      - name: Download JAR and prepare artifacts
        run: |
          mkdir release
          curl -L "${{ fromJson(steps.info.outputs.latestJson)[0].url }}" -o "release/${{ fromJson(steps.info.outputs.latestJson)[0].name}}"
          mv compactmachines.json release/compactmachines.json

      - name: Add Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release
          path: release

  release-cf:
    name: Make Curseforge Release
    runs-on: ubuntu-20.04
    needs: [get-package-info]
    steps:
      - name: Grab JAR and Info
        uses: actions/download-artifact@v4
        with:
          name: release
          path: .

      - name: Read info into variable [latest]
        id: info
        run: echo "latestJson=$(cat compactmachines.json)" >> $GITHUB_OUTPUT

      - name: Create CurseForge Release
        uses: itsmeow/curseforge-upload@master
        with:
          token: ${{ secrets.CURSEFORGE_TOKEN }}
          project_id: ${{ secrets.CF_PROJECT }}
          game_endpoint: minecraft
          file_path: ${{ fromJson(steps.info.outputs.latestJson)[0].name}}
          game_versions: java:Java 17,Forge
          release_type: alpha